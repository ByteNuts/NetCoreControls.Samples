@using System.Collections
@using System.Dynamic
@using ByteNuts.NetCoreControls.Models.Grid
@using ByteNuts.NetCoreControls.Samples.Dapper.Models.Db
@{
    var context = ViewData["EditableGrid"] as NccGridContext;
}

<ncc:grid Context="@context" DataKeys="ProductID" AllowPaging="true" RenderForm="true">
    <ncc:grid-content ContentType="PreContent">
        @if (ViewBag.Message != null)
        {
            <div class="alert alert-@ViewBag.MessageType alert-dismissable">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                @ViewBag.Message
            </div>
        }
    </ncc:grid-content>
    <ncc:grid-columns>
        <ncc:grid-columnbound DataValue="@Model.ProductID" DataField="ProductID" HeaderText="Product Id"></ncc:grid-columnbound>
        <ncc:grid-columnbound DataValue="@Model.ProductName" DataField="ProductName" HeaderText="Product Name"></ncc:grid-columnbound>
        <ncc:grid-columntemplate>
            <ncc:grid-headertemplate>Supplier</ncc:grid-headertemplate>
            <ncc:grid-itemtemplate>
                @(((List<SupplierModel>)context?.AdditionalData["Suppliers"]).FirstOrDefault(x => x.SupplierID == Model.SupplierID)?.CompanyName)
            </ncc:grid-itemtemplate>
            <ncc:grid-edittemplate>
                <select asp-items="@(new SelectList((List<SupplierModel>)context?.AdditionalData["Suppliers"], "SupplierID", "CompanyName", Model.SupplierID))" name="SupplierID" class="form-control">
                </select>
            </ncc:grid-edittemplate>
        </ncc:grid-columntemplate>
        <ncc:grid-columntemplate>
            <ncc:grid-headertemplate>Category</ncc:grid-headertemplate>
            <ncc:grid-itemtemplate>
                @(((List<CategoryModel>)context?.AdditionalData["Categories"]).FirstOrDefault(x => x.CategoryID == Model.CategoryID)?.CategoryName)
            </ncc:grid-itemtemplate>
            <ncc:grid-edittemplate>
                <select asp-items="@(new SelectList((List<CategoryModel>)context?.AdditionalData["Categories"], "CategoryID", "CategoryName", Model.CategoryID))" name="CategoryID" class="form-control"></select>
            </ncc:grid-edittemplate>
        </ncc:grid-columntemplate>
        <ncc:grid-columnbound DataValue="@Model.QuantityPerUnit" DataField="QuantityPerUnit" HeaderText="Quantity Per Unit"></ncc:grid-columnbound>
        <ncc:grid-columnbound DataValue="@($"{Model.UnitPrice:0.00} €")" DataField="UnitPrice" HeaderText="Unit Price"></ncc:grid-columnbound>
        <ncc:grid-columnbound DataValue="@Model.UnitsInStock" DataField="UnitsInStock" HeaderText="Units In Stock"></ncc:grid-columnbound>
        <ncc:grid-columnbound DataValue="@Model.UnitsOnOrder" DataField="UnitsOnOrder" HeaderText="Units On Order"></ncc:grid-columnbound>
        <ncc:grid-columnbound DataValue="@Model.ReorderLevel" DataField="ReorderLevel" HeaderText="Reorder Level"></ncc:grid-columnbound>
        <ncc:grid-columntemplate>
            <ncc:grid-headertemplate>Discontinued</ncc:grid-headertemplate>
            <ncc:grid-itemtemplate>
                <span>@(Model.Discontinued ? "Discontinued" : "Active")</span>
            </ncc:grid-itemtemplate>
            <ncc:grid-edittemplate>
                <select name="Discontinued" class="form-control">
                    @if (Model.Discontinued)
                    {
                        <option value="true" selected="selected">Discontinued</option>
                        <option value="false">Active</option>
                    }
                    else
                    {
                        <option value="true">Discontinued</option>
                        <option value="false" selected="selected">Active</option>
                    }
                </select>
            </ncc:grid-edittemplate>
        </ncc:grid-columntemplate>
    </ncc:grid-columns>
</ncc:grid>